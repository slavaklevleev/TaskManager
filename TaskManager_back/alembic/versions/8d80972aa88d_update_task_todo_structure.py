"""Update Task (todo) structure

Revision ID: 8d80972aa88d
Revises: 24dc2571a171
Create Date: 2025-03-25 16:57:40.010876

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8d80972aa88d'
down_revision: Union[str, None] = '24dc2571a171'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_tag')
    op.execute(
        """
        ALTER TABLE tasks
        ALTER COLUMN status TYPE boolean
        USING CASE 
            WHEN status = 'done' THEN true
            ELSE false
        END
        """
    )
    op.drop_constraint('tasks_project_id_fkey', 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'project_id')
    op.execute('DROP TYPE IF EXISTS taskstatus')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('tasks_project_id_fkey', 'tasks', 'projects', ['project_id'], ['id'])
    op.alter_column('tasks', 'status',
               existing_type=sa.Boolean(),
               type_=postgresql.ENUM('todo', 'in_progress', 'done', name='taskstatus'),
               existing_nullable=True)
    op.create_table('task_tag',
    sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name='task_tag_tag_id_fkey'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='task_tag_task_id_fkey')
    )
    # ### end Alembic commands ###
